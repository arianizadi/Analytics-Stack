version: "3.9"
services:
  # Core deps
  zookeeper:
    image: bitnami/zookeeper:3.9
    environment: [ALLOW_ANONYMOUS_LOGIN=yes]
    restart: unless-stopped
  kafka:
    image: bitnami/kafka:3.7
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    depends_on: [zookeeper]
    restart: unless-stopped
  redis:
    image: redis:7
    restart: unless-stopped
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: openreplay
      POSTGRES_USER: openreplay
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes: [or-pg:/var/lib/postgresql/data]
    restart: unless-stopped
  clickhouse:
    image: clickhouse/clickhouse-server:23.12
    ulimits:
      nofile: { soft: 262144, hard: 262144 }
    volumes: [or-ch:/var/lib/clickhouse]
    restart: unless-stopped
  minio:
    image: bitnami/minio:2024
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: ["server", "/data", "--console-address", "0.0.0.0:9001"]
    volumes: [or-minio:/data]
    restart: unless-stopped

  # OpenReplay services (simplified)
  ingester:
    image: openreplay/ingest:latest
    environment:
      KAFKA_BROKERS: kafka:9092
      CLICKHOUSE_ADDR: clickhouse:8123
      REDIS_URL: redis://redis:6379
      S3_ENDPOINT: http://minio:9000
      S3_BUCKET_SESSIONS: sessions
      S3_ACCESS_KEY: admin
      S3_SECRET_KEY: ${MINIO_ROOT_PASSWORD}
      S3_FORCE_PATH_STYLE: "true"
    depends_on: [kafka, clickhouse, redis, minio]
    restart: unless-stopped
  api:
    image: openreplay/api:latest
    environment:
      DATABASE_URL: postgres://openreplay:${POSTGRES_PASSWORD}@postgres:5432/openreplay
      CLICKHOUSE_ADDR: clickhouse:8123
      REDIS_URL: redis://redis:6379
      S3_ENDPOINT: http://minio:9000
      S3_BUCKET_SESSIONS: sessions
      S3_ACCESS_KEY: admin
      S3_SECRET_KEY: ${MINIO_ROOT_PASSWORD}
      S3_FORCE_PATH_STYLE: "true"
    depends_on: [postgres, clickhouse, redis, minio]
    restart: unless-stopped
  web:
    image: openreplay/web:latest
    container_name: openreplay-web
    environment:
      API_URL: http://api:8080
    depends_on: [api]
    restart: unless-stopped

volumes:
  or-pg:
  or-ch:
  or-minio:
